// See https://aka.ms/new-console-template for more information
using HidLibrary;
using System.Diagnostics;
using TheKey_v2;

var _devices = HidDevices.Enumerate().Where(x => x.DevicePath.Contains("vid_feed"));
foreach (var _device in _devices)
{
    // foreach LightMode
    /*foreach (byte mode in (LightMode[])Enum.GetValues(typeof(LightMode))){
        _device.Write(new byte[]
        {
                        // 👇 0x01 Mode 1 0x0E Mode rainbow
        0x00, 0x07, 0x81, (byte)mode, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
        });
        Thread.Sleep(100);
    }

    _device.Write(new byte[]
    {
                   // 👇 0x81 Set rgb mode
                        // 👇 0x01 Mode 1 0x0E Mode rainbow
        0x00, 0x07, 0x81, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    });
    // QMK power of led

    _device.Write(new byte[]
    {
        0x00, 0x07, 0x83, 0x11, 0xEE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    });
    Thread.Sleep(1000);
    _device.Write(new byte[]
    {
        0x00, 0x07, 0x83, 0x11, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    });
    Thread.Sleep(100);
    _device.Write(new byte[]
    {
        0x00, 0x07, 0x83, 0x11, 0xB0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    });
    Thread.Sleep(100);
    _device.Write(new byte[]
    {
        0x00, 0x07, 0x83, 0x11, 0xA0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    });
    Thread.Sleep(100);
    _device.Write(new byte[]
    {
        0x00, 0x07, 0x83, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    });
    Thread.Sleep(1000);
    _device.Write(new byte[]
    {
        0x00, 0x07, 0x83, 0xFF, 0xEE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    });*/
}
Console.WriteLine(_devices);

var d = new Keyboard();
//d.SetBrightness(50);
//d.SetLightMode(LightMode.Snake1);
/*d.SetLightModeSpeed(0);
Thread.Sleep(1000);*/
d.SetLightModeSpeed(1);