using HidLibrary;
using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using TheKey_v2.Enum;

namespace TheKey_v2
{
    internal class Keyboard
    {
        List<HidDevice> _devices;

        public Keyboard()
        {
            _devices = HidDevices.Enumerate().Where(x => x.DevicePath.Contains("vid_feed")).ToList();
        }

        public void Write(byte[] data)
        {
            foreach (var device in _devices)
            {
                device.Write(data);
            }
        }

        public void SetLightMode(LightMode mode)
        {
            Write(new byte[]
            {
                0x00, 0x07, (byte)COM.id_qmk_rgblight_effect, (byte)mode, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
            });
        }

        public void SetLightBrightness(int percent)
        {
            byte brightness = (byte)(percent * 2.55);
            Write(new byte[]
            {
                0x00, 0x07, (byte)COM.id_qmk_rgblight_brightness, (byte)brightness, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
            });
        }

        // NOT TESTED
        public void SetLightModeSpeed(int percent)
        {
            byte speed = (byte)(percent * 2.55);
            Write(new byte[]
            {
                0x00, 0x07, (byte)COM.id_qmk_rgblight_effect_speed, (byte)speed, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
            });
        }

        // Note color is in HSL format
        public void SetLightColor(int hue, int saturation, int light = 100)
        {
            byte h = (byte)(hue * 100 / 360 * 2.55);
            byte s = (byte)(saturation * 2.55);
            byte l = (byte)(light * 2.55);
            SetLightBrightness(l);
            Write(new byte[]
           {
                0x00, 0x07, (byte)COM.id_qmk_rgblight_color, (byte)h, (byte)s, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
           });
        }
        
        // NOT TESTED
        public void SetBackLightModeSpeed(int percent)
        {
            byte speed = (byte)(percent * 2.55);
            Write(new byte[]
            {
                0x00, 0x07, (byte)COM.id_qmk_backlight_brightness, (byte)speed, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
            });
        }

        // NOT TESTED
        public void SetBackLightMode(int mode)
        {
            Write(new byte[]
            {
                0x00, 0x07, (byte)COM.id_qmk_backlight_effect, (byte)mode, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
            });
        }
    }
}
